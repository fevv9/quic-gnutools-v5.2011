@c This is part of the GAS manual.
@c For copying conditions, see the file as.texinfo.
@ifset GENERIC
@page
@node Hexagon-Dependent
@chapter Hexagon Dependent Features
@end ifset
@ifclear GENERIC
@node Machine Dependencies
@chapter Hexagon Dependent Features
@end ifclear

@cindex Hexagon support
@menu
* Hexagon-Opts::                   Hexagon Options
* Hexagon-Directives::             Hexagon Machine Directives
@end menu

@node Hexagon-Opts
@section Hexagon Options

@cindex options, Hexagon
@cindex Hexagon options
The Qualcomm Hexagon version of @code{@value{AS}} has a few machine
dependent options:

@table @code

@cindex @code{-EB} option, Hexagon
@item -EB
Generate code for a big-endian CPU.

@cindex @code{-EL} option, Hexagon
@item -EL
Generate code for a little-endian CPU (default).

@cindex @code{-G} option, Hexagon
@item -G @var{size}
Set the maximum size of objects to be optimized using the GP register to
@var{size} (default is 8).

@cindex @code{-march=} option, Hexagon
@item -march=@var{version}
Generate code for the specified Hexagon version.  The following version names are
valid:
@code{v2}, @code{v3} and @code{v4}.

@cindex @code{-mcpu=} option, Hexagon
@item -mcpu=@var{version}
Equivalent to @code{-march=@var{version}}.

@cindex @code{-mv2} option, Hexagon
@item -mv2
Generate code for Hexagon V2.  Equivalent to @code{-march=v2} (default).

@cindex @code{-mv3} option, Hexagon
@item -mv3
Generate code for Hexagon V3.  Equivalent to @code{-march=v3}.

@cindex @code{-mv4} option, Hexagon
@item -mv4
Generate code for Hexagon V4.  Equivalent to @code{-march=v4}.

@cindex @code{-mfalign-info} option, Hexagon
@item -mfalign-info
Report usage statistics for the directive @code{.falign}.

@cindex @code{-mno-extender} option, Hexagon
@item -mno-extender
Disable the use of constant extenders in Hexagon V4.

@cindex @code{-mno-jumps} option, Hexagon
@item -mno-jumps
Disable automatic extension of some branch instructions in Hexagon V4.

@cindex @code{-mno-jumps-long} option, Hexagon
@item -mno-jumps-long
Disable automatic extension of long (non-paired)
branch instructions in Hexagon V4.

@cindex @code{-mno-pairing} option, Hexagon
@item -mno-pairing
Disable pairing of packet instructions in Hexagon V4.

@cindex @code{-mno-pairing-branch} option, Hexagon
@item -mno-pairing-branch
Disable pairing of branch instructions in Hexagon V4.

@cindex @code{-mno-pairing-duplex} option, Hexagon
@item -mno-pairing-duplex
Disable pairing to duplex instructions in Hexagon V4.

@cindex @code{-mpairing-info} option, Hexagon
@item -mpairing-info
Report about instructions pairing in Hexagon V4.

@cindex @code{-msort-sda} option, Hexagon
@item -msort-sda
Sort objects in the small-data area in ascending oder by their access size.
@code{-mno-sort-sda} disables this default behavior.

@end table

@node Hexagon-Directives
@section Hexagon Machine Directives

@cindex machine directives, Hexagon
@cindex Hexagon machine directives
@table @code

@cindex @code{.falign} directive, Hexagon
@item .falign
The @code{.falign} directive guarantees that the next instruction packet does
not cross a 16-byte address boundary, thereby avoiding a fetch stall, by adding
NOP instructions to preceding instruction packets if necessary.

@cindex @code{.comm} directive, Hexagon
@item .comm
The @code{.comm} directive accepts an additional optional
argument that specifies the access size of global objects thus defined.  If
ommited, then the natural access size for the object alignment is assumed.  When
the option @code{-msort-sda} is specified, the objects in the
small-data area are sorted in ascending order by their access sizes.

@cindex @code{.lcomm} directive, Hexagon
@item .lcomm
The @code{.lcomm} directive accepts an additional optional
argument that specifies the access size of local objects thus defined,
similarly to @code{.comm}.

@end table
